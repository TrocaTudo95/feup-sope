#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <wait.h>
#include <errno.h>
#include <dirent.h>
#include <sys/wait.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>

typedef struct{
	char * name;
	int print;
	int delete;
	int exec;
	int perm;
	int type;
}Options;
int main(int argc, char const *argv[])
{
Options options;

								if(argc  < 2) {
											printf("Invalid amount of arguments \n");
											return 1;
								}

								DIR *current_dir;
								struct dirent *directory_info;
								char path[256];
								strcpy(path, argv[1]);
								current_dir = opendir(path);
							//	dp = opendir ("./test");

								char ** temp_argv;
								size_t nr_bites;
								nr_bites=sizeof(temp_argv)*argc;
								temp_argv=malloc(nr_bites);
								memcpy(temp_argv,argv,nr_bites);

							//rewinddir(current_dir);  nao sei se é preciso aqui se não
					while( (directory_info = readdir (current_dir))!=NULL) {
											if(strcmp(directory_info->d_name, ".")!=0 && strcmp(directory_info->d_name, "..") !=0 &&(directory_info->d_type==DT_DIR))
											{
												int pid;
												if((pid=fork())==0){
														sprintf(temp_argv[1],"%s/%s",argv[1],directory_info->d_name);
														exec(argv_new[0],argv_new);
												}


																}
																(void) closedir (current_dir);
}

								return 0;
}
